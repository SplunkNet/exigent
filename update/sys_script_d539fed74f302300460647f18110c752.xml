<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_260782_bc_emergencies</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_260782_bc_emergencies">u_affected_locationISNOTEMPTY^u_evacuation=true^EQ<item endquery="false" field="u_affected_location" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="u_evacuation" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message><![CDATA[<p>It&#39;s running</p>]]></message>
        <name>autpopAffectedIndividuals</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	// Add your code here
	var alArray=current.u_affected_location.toString().split(",");
	for(var i=0;i<alArray.length;i++){
		var gr = new GlideRecord('sys_user');
		gr.addQuery('location', alArray[i]);
		gr.query(); // Issue the query to the database to get relevant records
		
		while (gr.next()) {
			// add code here to process the incident record
			//console.log(gr.user); //test
			var gr2 = new GlideRecord('x_260782_bc_affected_individuals');
			gr2.addQuery('u_name',gr.getValue('sys_id'));
			gr2.addQuery('u_emergency',current.getValue('sys_id'));
			gr2.query();
			//will duplicate if emergency is different
			if (!checkDuplicate(gr.getValue('name'),gr2)) {
				gr2.initialize();
				gr2.u_name = gr.getValue('name');
				gr2.u_emergency=current.getValue('sys_id');
				gr2.insert();
			}
		}
	}
	function checkDuplicate(id,gr2) {
		if (gr2.next()) {
			return true;
		}
		return false;
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-02 17:37:48</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d539fed74f302300460647f18110c752</sys_id>
        <sys_mod_count>71</sys_mod_count>
        <sys_name>autpopAffectedIndividuals</sys_name>
        <sys_overrides/>
        <sys_package display_value="Business Continuity" source="x_260782_bc">3f01e2374f602300460647f18110c7bf</sys_package>
        <sys_policy/>
        <sys_scope display_value="Business Continuity">3f01e2374f602300460647f18110c7bf</sys_scope>
        <sys_update_name>sys_script_d539fed74f302300460647f18110c752</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-11-08 18:34:14</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d539fed74f302300460647f18110c752"/>
</record_update>
